#!/bin/bash

# Exit on error
set -e

# Check if ETKPATH is set
if [ -z "${ETKPATH}" ]; then
    echo "Error: ETKPATH is not set. Please set it before running this script."
    exit 1
fi

# Define paths
AMREX_REPO="https://github.com/AMReX-Codes/amrex.git"
AMREX_DIR="${ETKPATH}/amrex"
AMREX_BUILD_DIR="${AMREX_DIR}/build"
AMREX_LIB_DIR="${ETKPATH}/amrex-lib-gcc-nvcc"

# Clone AMReX repository
echo "Cloning AMReX repository..."
cd "${ETKPATH}"
if [[ ! -d "${AMREX_DIR}" ]]; then
    git clone "${AMREX_REPO}" amrex
else
    echo "AMReX directory already exists. Skipping clone."
fi

# Create directories for build and installation
for dir in "${AMREX_BUILD_DIR}" "${AMREX_LIB_DIR}"; do
    if [[ -d "${dir}" ]]; then
        echo "Removing existing directory: ${dir}"
        rm -rf "${dir}"
    fi
    mkdir -p "${dir}"
done

# Set environment variables for compiler and flags
export CC=$(which gcc)
export CXX=$(which g++)
export FC=$(which gfortran)
export CUCC=$(which nvcc)
export CFLAGS="-I${TACC_CUDA_INC}"
export CXXFLAGS="-I${TACC_CUDA_INC}"
export LDFLAGS="-L${TACC_CUDA_LIB}"

# Build and install AMReX
echo "Building AMReX..."
cd "${AMREX_BUILD_DIR}"
cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo \
      -DCMAKE_INSTALL_PREFIX=${AMREX_LIB_DIR} \
      -DCMAKE_CUDA_COMPILER=${CUCC} \
      -DCMAKE_CUDA_COMPILER_FORCED=ON \
      -DCMAKE_CUDA_COMPILE_FEATURES=cuda_std_17 \
      -DAMReX_GPU_BACKEND=CUDA \
      -DAMReX_CUDA_ARCH=90 \
      -DAMReX_FORTRAN=OFF \
      -DAMReX_FORTRAN_INTERFACES=OFF \
      -DAMReX_OMP=OFF \
      -DAMReX_PARTICLES=ON \
      -DAMReX_PRECISION=DOUBLE \
      .. && \
make -j24 install

echo "AMReX has been successfully built and installed in ${AMREX_LIB_DIR}."
