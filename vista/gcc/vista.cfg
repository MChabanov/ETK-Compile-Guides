# Whenever this version string changes, the application is configured
# and rebuilt from scratch

VERSION = delta-2024-02-08

CPP  = cpp
FPP  = cpp
CC   = gcc
CXX  = g++
F90  = gfortran
CUCC = nvcc

# subset CUCCFLAGS without "-x cu" (must no be used here) and options used only to compile code
# must set LD and not LDFLAGS to avoid ExternalLibraries picking up the options
LD = nvcc --compiler-bindir g++ -g --forward-unknown-to-host-compiler --relocatable-device-code=true --objdir-as-tempdir

CPPFLAGS = -DSIMD_CPU
FPPFLAGS = -traditional
# do not add -std=gn99 or -std=c99 below since that causes nvcc to fail linking
# HydroRNSID's utilities. GCC on Delta defaults to c17, so is "new enough"
CFLAGS    = -D_GNU_SOURCE -fomit-frame-pointer
CXXFLAGS  = -std=c++17 -D_GNU_SOURCE -fomit-frame-pointer
F90FLAGS  = -ffixed-line-length-none -fno-range-check -fomit-frame-pointer
CUCCFLAGS = -pipe -g --compiler-options -march=native -std=c++17 --compiler-options -std=gnu++17 --expt-relaxed-constexpr --extended-lambda --gpu-architecture sm_90 --forward-unknown-to-host-compiler --Werror ext-lambda-captures-this --relocatable-device-code=true --objdir-as-tempdir -x cu

LDFLAGS = -L${TACC_CUDA_LIB} -L${TACC_NVPL_LIB}

SYS_INC_DIRS = ${TACC_NVMATH_INC} ${TACC_GSL_DIR}/include
LIBDIRS      = ${TACC_NVMATH_LIB} ${TACC_GSL_DIR}/lib
LIBS         = gfortran nvToolsExt curand hdf5

C_LINE_DIRECTIVES = yes
F_LINE_DIRECTIVES = yes

VECTORISE = no

DEBUG            = no
CPP_DEBUG_FLAGS  = -g -DCARPET_DEBUG
FPP_DEBUG_FLAGS  = -g -DCARPET_DEBUG
C_DEBUG_FLAGS    = -g -ftrapv -fstack-protector-all -fbounds-check
CXX_DEBUG_FLAGS  = -g -ftrapv -fstack-protector-all -fbounds-check
F90_DEBUG_FLAGS  = -g -ftrapv -fstack-protector-all -fcheck=bounds,do,mem,pointer,recursion -finit-character=65 -finit-integer=42424242 -finit-real=nan

OPTIMISE            = yes
CPP_OPTIMISE_FLAGS  = # -DCARPET_OPTIMISE -DNDEBUG
FPP_OPTIMISE_FLAGS  = # -DCARPET_OPTIMISE -DNDEBUG
C_OPTIMISE_FLAGS    = -O3
CXX_OPTIMISE_FLAGS  = -O3
F90_OPTIMISE_FLAGS  = -O3

PROFILE           = no
CPP_PROFILE_FLAGS =
FPP_PROFILE_FLAGS =
C_PROFILE_FLAGS   = -pg
CXX_PROFILE_FLAGS = -pg
F90_PROFILE_FLAGS = -pg

OPENMP           = no

WARN            = no
CPP_WARN_FLAGS  = -Wall
FPP_WARN_FLAGS  = -Wall
C_WARN_FLAGS    = -Wall
CXX_WARN_FLAGS  = -Wall
F90_WARN_FLAGS  = -Wall

# CUDA does not support these
DISABLE_INT16 = yes
DISABLE_REAL16 = yes

# More Options

#AMREX_DIR = ${ETKPATH}/amrex-lib
AMREX_ENABLE_CUDA = yes

MPI_DIR      = ${TACC_MPI_DIR}
MPI_INC_DIRS = ${TACC_MPI_DIR}/include
MPI_LIB_DIRS = ${TACC_MPI_DIR}/lib
MPI_LIBS     = mpi

BLAS_DIR        = ${TACC_NVPL_DIR}
BLAS_INC_DIRS   = ${TACC_NVPL_DIR}/include
BLAS_LIB_DIRS   = ${TACC_NVPL_DIR}/lib
BLAS_LIBS       = nvpl_blas_lp64_gomp

LAPACK_DIR      = ${TACC_NVPL_DIR}
LAPACK_INC_DIRS = ${TACC_NVPL_DIR}/include
LAPACK_LIB_DIRS = ${TACC_NVPL_DIR}/lib
LAPACK_LIBS     = nvpl_lapack_lp64_gomp

#ADIOS2_DIR = ${TACC_ADIOS2_DIR}
#ADIOS2_INC_DIRS = ${TACC_ADIOS2_INC}
#ADIOS2_LIB_DIRS = ${TACC_ADIOS2_LIB}
#ADIOS2_LIBS = adios2_cxx11_mpi adios2_cxx11

BOOST_DIR = ${TACC_BOOST_DIR}
FFTW3_DIR = ${TACC_FFTW3_DIR}
GSL_DIR = ${TACC_GSL_DIR}

HDF5_DIR = ${TACC_HDF5_DIR}
HDF5_INC_DIRS = ${TACC_HDF5_INC}
HDF5_LIB_DIRS = ${TACC_HDF5_LIB}

ZLIB_DIR = ${TACC_ZLIB_DIR}

YAML_CPP_DIR = BUILD

#HWLOC_DIR    = ${OLCF_HWLOC_ROOT}
#LIBJPEG_DIR  = ${OLCF_LIBJPEG_TURBO_ROOT}

#OPENBLAS_DIR = ${OLCF_OPENBLAS_ROOT}
#PTHREADS_DIR = NO_BUILD
#SSHT_DIR     = BUILD
#SILO_DIR     = BUILD
